<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1211.1636                               -->
<workbook original-version='18.1' source-build='2019.4.1 (20194.19.1211.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau_Table_1)' inline='true' name='federated.1bfkjy31fybkd5150hw9u08lpgxi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_1' name='excel-direct.0hb659u1odashg1c7m69y1fibsee'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kprav/Downloads/Tableau_Table_1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0hb659u1odashg1c7m69y1fibsee' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.427143' measure-ordering='alphabetic' measure-percentage='0.572857' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='total_cases' />
        <field-sort-custom-order field='total_deaths' />
        <field-sort-custom-order field='DeathPercentage' />
        <field-sort-custom-order field='Calculation_391250240347209731' />
        <field-sort-custom-order field='Calculation_391250240346869761' />
      </field-sort-info>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_2)' inline='true' name='federated.06jgaff0qln1se1cxnfjn1g4a1az' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_2' name='excel-direct.0saj87q1a7zqey1d3urw602r2g0s'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kprav/Downloads/Tableau_Table_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0saj87q1a7zqey1d3urw602r2g0s' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B11:no:A1:B11:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B11:no:A1:B11:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.481429' measure-ordering='alphabetic' measure-percentage='0.518571' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#386592'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4472a0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#5081ae'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#5f90ba'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#6e9fc7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#7eaed3'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#90bede'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a4cee9'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_3)' inline='true' name='federated.10xvvdj1ro3xqw119r2ys1debnl7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_3' name='excel-direct.1pe5o4t01llnz311rz9qi0dnb6kh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kprav/Downloads/Tableau_Table_3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1pe5o4t01llnz311rz9qi0dnb6kh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D243:no:A1:D243:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D243:no:A1:D243:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.425714' measure-ordering='alphabetic' measure-percentage='0.574286' show-structure='true' user-set-layout='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Sheet1 (Tableau_Table_5)' inline='true' name='federated.0ta8u5v0hvkwng1890qg70r7ax63' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau_Table_5' name='excel-direct.0qo4yv91uvommb19k72hf1gaz8gk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kprav/Downloads/Tableau_Table_5.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.0qo4yv91uvommb19k72hf1gaz8gk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='date' name='date' ordinal='0' />
            <column datatype='string' name='Location' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.462857' measure-ordering='alphabetic' measure-percentage='0.537143' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_1)' name='federated.1bfkjy31fybkd5150hw9u08lpgxi' />
          </datasources>
          <datasource-dependencies datasource='federated.1bfkjy31fybkd5150hw9u08lpgxi'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:total_deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:DeathPercentage:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:total_cases:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]' value='214' />
            <format attr='height' value='34' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#1b1b1b' />
            <format attr='border-color' scope='rows' value='#555555' />
            <format attr='border-color' scope='cols' value='#555555' />
            <format attr='color' value='#000000' />
            <format attr='border-width' scope='cols' value='1' />
            <format attr='text-format' field='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#333333' />
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#66617f' />
            <format attr='border-style' scope='cols' value='solid' />
            <format attr='border-width' scope='cols' value='1' />
            <format attr='height' field='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' value='#ffffff' />
            <format attr='text-format' field='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[sum:DeathPercentage:qk]' value='p0%' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
            <format attr='border-color' scope='rows' value='#69aaa5' />
            <format attr='border-width' data-class='subtotal' scope='rows' value='1' />
            <format attr='border-color' data-class='subtotal' scope='rows' value='#d4d4d4' />
            <format attr='border-color' scope='cols' value='#f1ce63' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1bfkjy31fybkd5150hw9u08lpgxi].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6390865E-9774-4C4B-B081-8B50C74CFD80}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Total Death By Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_2)' name='federated.06jgaff0qln1se1cxnfjn1g4a1az' />
          </datasources>
          <datasource-dependencies datasource='federated.06jgaff0qln1se1cxnfjn1g4a1az'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[none:location:nk]' value='102' />
            <format attr='text-format' field='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' value='n#,##0,K;-#,##0,K' />
            <format attr='text-align' value='center' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' />
              <lod column='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[none:location:nk]' />
              <text column='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5272375345230103' />
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='1020' />
                <format attr='maxwidth' value='1020' />
                <format attr='minheight' value='623' />
                <format attr='maxheight' value='623' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.06jgaff0qln1se1cxnfjn1g4a1az].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{E3E77572-DE95-4394-80CD-71CF5E12A5A0}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Infected By Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_3)' name='federated.10xvvdj1ro3xqw119r2ys1debnl7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10xvvdj1ro3xqw119r2ys1debnl7'>
            <column aggregation='None' datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[Longitude (generated)]' field-type='quantitative' max='23672410.222410705' min='-19341631.067086268' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[Latitude (generated)]' field-type='quantitative' max='13040315.178308927' min='-5214424.8335506506' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[sum:PercentPopulationInfected:qk]' />
              <lod column='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[none:Location:nk]' />
              <geometry column='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10xvvdj1ro3xqw119r2ys1debnl7].[Latitude (generated)]</rows>
        <cols>[federated.10xvvdj1ro3xqw119r2ys1debnl7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BE9F4A09-81CD-4506-B9E1-41EBFE27C7F6}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Infected Country By Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau_Table_5)' name='federated.0ta8u5v0hvkwng1890qg70r7ax63' />
          </datasources>
          <datasource-dependencies datasource='federated.0ta8u5v0hvkwng1890qg70r7ax63'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[avg:PercentPopulationInfected:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[tmn:date:qk]' scope='cols' value='Month ' />
            <encoding attr='space' class='0' field='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[tmn:date:qk]' field-type='quantitative' range-type='uniform' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[tmn:date:qk]' value='*dd-mmm-yy' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]' />
              <text column='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]' />
              <text column='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[sum:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='994' />
                <format attr='maxwidth' value='994' />
                <format attr='minheight' value='700' />
                <format attr='maxheight' value='700' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ta8u5v0hvkwng1890qg70r7ax63].[avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0ta8u5v0hvkwng1890qg70r7ax63].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{8021650F-58C5-4E27-BC00-9D76FC9EA01F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1500' minheight='900' minwidth='1500' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='16' param='vert' type='layout-flow' w='98934' x='533' y='889'>
            <zone h='98222' id='14' type='layout-basic' w='98934' x='533' y='889'>
              <zone h='50987' id='8' param='horz' type='layout-flow' w='98934' x='533' y='889'>
                <zone h='50987' id='6' type='layout-basic' w='98934' x='533' y='889'>
                  <zone h='16125' id='3' name='Sheet 1' w='43639' x='533' y='889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34862' id='5' name='Sheet 2' w='43639' x='533' y='17014'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='50987' id='10' name='Sheet 3' w='55295' x='44172' y='889'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='47235' id='12' name='Sheet 4' w='88667' x='533' y='51876'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='47235' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]' type='color' w='10267' x='89200' y='51876'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='17' param='vert' type='layout-flow' w='98934' x='533' y='889'>
                <zone fixed-size='137' h='16125' id='3' is-fixed='true' name='Sheet 1' w='43639' x='533' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50987' id='10' is-fixed='true' name='Sheet 3' w='55295' x='44172' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34862' id='5' is-fixed='true' name='Sheet 2' w='43639' x='533' y='17014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47235' id='12' is-fixed='true' name='Sheet 4' w='88667' x='533' y='51876'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='47235' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]' type='color' w='10267' x='89200' y='51876'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B56C7A6D-2FD4-4D1B-BB50-376C00FE7670}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bfkjy31fybkd5150hw9u08lpgxi].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0194588B-2798-4DE0-BA51-672806062C58}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.06jgaff0qln1se1cxnfjn1g4a1az].[sum:TotalDeathCount:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D0AEC617-EF77-42E3-A81D-318D8AC54763}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10xvvdj1ro3xqw119r2ys1debnl7].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10xvvdj1ro3xqw119r2ys1debnl7].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{96EF0D6B-1A10-4DE3-8D37-31B6F055AFF5}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]</field>
            <field>[federated.0ta8u5v0hvkwng1890qg70r7ax63].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A3457E8-9218-40DD-B057-28CD51776DEB}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0ta8u5v0hvkwng1890qg70r7ax63].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{2AB9B79F-D78A-499F-B8D1-4D69BBD00286}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      BJyH/w+hL/YdlPXdTwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='58' name='Sheet 1' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      G8FaoP1/sHboEdBbIsUAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
